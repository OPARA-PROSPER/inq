#!/usr/bin/env ruby

# frozen_string_literal: true

require "how_is"
require "how_is/cli"

begin
  result = HowIs::CLI.parse(ARGV)
rescue HowIs::CLI::OptionsError => e
  if ENV['SHOW_TRACE']
    raise
  else
    abort "Error: #{e.message}"
  end
end

options = result[:options]

if options[:help]
  puts result[:opts]
  exit
elsif options[:version]
  puts HowIs::VERSION
  exit
end

begin
  if options[:config]
    reports = HowIs.from_config(YAML.load_file(options[:config]))

    reports.each { |file, report| HowIs::Report.save_report(file, report) }
  else
    report =
      if options[:from]
        json_report = File.open(options[:from]).read
        HowIs.from_json(json_report)
      else
        HowIs.new(options[:repository])
      end

    HowIs::Report.save_report(
      options[:report],
      HowIs::Report.to_format_based_on(options[:report], report)
    )
  end

rescue => e
  if ENV['SHOW_TRACE']
    raise
  else
    abort "Error: #{e.message}"
  end
end

