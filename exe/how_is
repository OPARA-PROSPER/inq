#!/usr/bin/env ruby

# frozen_string_literal: true

require "how_is"
require "how_is/cli"
require "date"

def error(message)
  abort "Error: #{message} (See --help for usage.)"
end

def error_with_exception(message)
  abort "Error: #{message} (Pass --verbose for more information.)"
end

def handle_error(error)
  key, data = error

  case key
  when :no_date
    error("No date provided.")
  when :no_repo
    error("No repository provided.")
  when :unsupported_format
    error("Unsupported format: #{data}")
  end
end

results = HowIs::CLI.parse(ARGV)
options = results[:options]

handle_error(results[:error]) if results.has_key?(:error)

if options[:help]
  puts results[:opts]
  exit
elsif options[:version]
  puts HowIs::VERSION
  exit
end

date = options[:date]

begin
  if options[:config]
    reports = HowIs.from_config(YAML.load_file(options[:config]), date)

    reports.each { |file, report| report.save_as(file) }
  else
    repository = ARGV.first
    report = HowIs.new(repository, date)

    report.save_as(options[:report])
  end
rescue => e
  raise if options[:verbose]

  error_with_exception(e.message)
end
